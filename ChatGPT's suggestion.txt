ржЖрж░ рж╕рзЗржЗ action n8n ржП ржпрж╛ржмрзЗ,
ЁЯСЙ n8n AI (Gemini/OpenAI) ржжрж┐рзЯрзЗ ржХрж╛ржЬ ржХрж░ржмрзЗ,
ЁЯСЙ рждрж╛рж░ржкрж░ рж░рзЗржЬрж╛рж▓рзНржЯ ржЖржмрж╛рж░ рждрзЛрж░ ржУрзЯрзЗржмрж╕рж╛ржЗржЯрзЗ ржлрж┐рж░рзЗ ржЖрж╕ржмрзЗред

тЪЩя╕П Option 1: Self-host n8n for Free (Best Way)
ЁЯФ╣ Step 1: Deploy n8n to Render (Free Hosting)

ржпрж╛ржУрзЯрж╛ ЁЯСЙ https://render.com

GitHub рж▓ржЧржЗржи ржХрж░ред

тАЬNew Web ServiceтАЭ ржХрзНрж▓рж┐ржХ ржХрж░ред

Source рж╣рж┐рж╕рзЗржмрзЗ ржжрж╛ржУ ЁЯСЙ

https://github.com/n8n-io/n8n


ржирж╛ржо ржжрж╛ржУ minimind-n8n

Build Command:

npm run build


Start Command:

n8n start


Free plan select ржХрж░рзЗ Deploy ржХрж░ред

ЁЯСЙ ржПрждрзЗ рждрзБржЗ ржкрж╛ржмрж┐ ржПржХржЯрж╛ URL ржПрж░ржХржо ржХрж┐ржЫрзБ:

https://minimind-n8n.onrender.com


ржПржЯрж╛ рждрзЛрж░ ржирж┐ржЬрзЗрж░ n8n server, ржкрзБрж░рзЛ free ЁЯТе

ЁЯФ╣ Step 2: ржкрзНрж░ржержоржмрж╛рж░ рж▓ржЧржЗржи ржХрж░

ржпржЦржи render deploy рж╢рзЗрж╖ рж╣ржмрзЗ,
ржЧрж┐рзЯрзЗ ржЦрзБрж▓ n8n dashboard:

https://minimind-n8n.onrender.com


ржкрзНрж░ржержоржмрж╛рж░ username/password рж╕рзЗржЯ ржХрж░ред

ЁЯФ╣ Step 3: рждрзЛрж░ ржУрзЯрзЗржмрж╕рж╛ржЗржЯрзЗрж░ рж╕рж╛ржерзЗ ржХрж╛ржирзЗржХрзНржЯ ржХрж░

ржПржЦржи рждрзБржЗ n8n ржПрж░ ржнрж┐рждрж░рзЗ ржПржХржЯрж╛ тАЬWebhookтАЭ Node рждрзИрж░рж┐ ржХрж░ржмрж┐ред

ЁЯСЙ ржЙржжрж╛рж╣рж░ржгрж╕рзНржмрж░рзВржк workflow:

[Webhook] тЖТ [Gemini API Request] тЖТ [Return Data]

Webhook Node:

Method: POST

URL: /api/analyze
тЖТ ржПржЯрж╛ deploy ржХрж░рж▓рзЗ URL рж╣ржмрзЗ:

https://minimind-n8n.onrender.com/webhook/api/analyze


рждрзЛрж░ frontend ржерзЗржХрзЗ ржПржЦржи ржПржнрж╛ржмрзЗ request ржжрж┐рждрзЗ ржкрж╛рж░ржмрж┐ ЁЯСЗ

await fetch("https://minimind-n8n.onrender.com/webhook/api/analyze", {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({ pageUrl: "https://facebook.com/xyz" }),
});

ЁЯФ╣ Step 4: Gemini Request Node (HTTP Request)

Webhook-ржПрж░ ржкрж░ ржПржХржЯрж┐ HTTP Request Node ржжрзЗ,

URL: https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent

Method: POST

Headers:

Content-Type: application/json
Authorization: Bearer YOUR_GEMINI_API_KEY


Body JSON:

{
  "contents": [
    { "parts": [{ "text": "Analyze this Facebook page: {{$json.pageUrl}}" }] }
  ]
}

ЁЯФ╣ Step 5: Return Response

рж╢рзЗрж╖рзЗ тАЬRespond to WebhookтАЭ node ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЛ, ржпрж╛рждрзЗ рж░рзЗржЬрж╛рж▓рзНржЯ frontend-ржП ржлрж┐рж░рзЗ ржЖрж╕рзЗред

Frontend ржП рж╕рж╣ржЬрзЗ print ржХрж░рж╛ ржпрж╛ржмрзЗ:

const res = await fetch(...);
const data = await res.json();
console.log(data.output);