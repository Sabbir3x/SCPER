Create a new edge function that ... Create best proposal for a client page with provided information. like "create-proposal" funtion. "create-proposal" function is not working but, way? i got a error message in my website "Failed to generate proposal: Edge Function returned a non-2xx status code"




Reasoned
Next step — I'll inspect the project to gather context (list edge functions & extensions). I'll call:
list_edge_functions (to see existing functions and confirm if "create-proposal" exists)
list_extensions (to check DB features that might affect the function)
I'll run those now.

Sabbir3x
yes




Reasoned
I'll list existing Edge Functions and DB extensions to find the broken "create-proposal" function and relevant DB context. No inputs needed beyond the project. I'll run: list_edge_functions and list_extensions.


Ran list_edge_functions

Reasoned
Problem: I can't inspect your project automatically
I attempted to list your Edge Functions and database extensions to find why your create-proposal Edge Function returns a non-2xx status, but my tool access is blocked by your organization's data-sharing settings:

Error: "You don't have permission to use this tool. This is an organization-wide setting requiring you to opt-in."
Because of that I can't directly view the deployed function or DB extensions. I can still help — below are focused troubleshooting steps, debugging checks, and a ready-to-deploy replacement Edge Function you can use to reproduce or replace the broken function.

Quick checklist — reproduce & gather the error details
Please collect these and paste the outputs here:

The exact error message shown in browser console and in server logs (if any).
The full HTTP response from the Edge Function (status code, response body). If you call it via curl, paste the response:
Example curl: curl -i -X POST https://[your-project].functions.supabase.co/create-proposal -H "Authorization: Bearer <anon_or_service_key>" -H "Content-Type: application/json" -d '{"title":"...","client":"..."}'
The Edge Function deployment logs (from Supabase dashboard > Edge Functions > create-proposal > Logs).
The Edge Function source code (paste the file here).
Any recent changes (code, environment variables, DB schema, extensions) before the error started.
If you want, run the curl above and paste the output; that often gives the status code and helpful error text.

Common causes and quick fixes
Check these first — they resolve ~90% of non-2xx Edge Function errors:

Missing or invalid environment variables
Ensure SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY or SUPABASE_ANON_KEY are set in function settings if you use them. Service role key required for server-side DB writes.
Function threw an uncaught exception
Wrap top-level code with try/catch and return JSON error messages. Check logs for stack traces.
CORS or preflight issues (if calling from browser)
Ensure function responds to OPTIONS and returns appropriate Access-Control-Allow-* headers.
Bad request payload or validation error
Validate input and return 400 with details.
DB errors (auth/permission/connection)
Ensure DB URL/keys are correct and the user/role used has permission; for RLS, use service_role to bypass RLS when intended.
Missing imports or runtime errors (Deno/Node mismatch)
Use only allowed imports per Edge Function guidelines; ensure code uses Deno.serve if needed.
Exceeded execution timeout or memory
Check logs for timeouts.
Minimal robust "create-proposal" Edge Function (ready to deploy)
This function:

Validates input
Calls Supabase REST/JS using the service role key via Fetch (no external deps)
Handles CORS
Returns clear JSON errors with status codes
Uses Deno.serve (compatible with Supabase Edge Functions)
Assumptions:

You want to insert a proposal into a table named proposals with columns: id (uuid default), title (text), client_name (text), content (text), created_at (timestamp default now()), metadata (jsonb).
You will set SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY as environment variables for the function (Supabase provides these automatically, but ensure service key is present).
The function will use the Supabase REST endpoint to insert (so no extra npm deps).
Paste this code into your function file and deploy (I can deploy if tool access is granted):
// create-proposal edge function (Deno)

"Deno.addSignalListener?.(
'SIGTERM'
, 
() =>
 
console
.log(
'SIGTERM received'
));
const
 SUPABASE_URL = Deno.env.get(
'SUPABASE_URL'
) ?? 
''
;
const
 SUPABASE_SERVICE_ROLE_KEY = Deno.env.get(
'SUPABASE_SERVICE_ROLE_KEY'
) ?? 
''
;
if
 (!SUPABASE_URL || !SUPABASE_SERVICE_ROLE_KEY) {
  
console
.error(
'Missing SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY'
);
}
const
 DEFAULT_HEADERS = {
  
'Content-Type'
: 
'application/json'
,
  
'Authorization'
: 
`Bearer 
${SUPABASE_SERVICE_ROLE_KEY}
`
,
  
'apikey'
: SUPABASE_SERVICE_ROLE_KEY,
};
async
 
function
 
insertProposal
(
payload: 
any
) 
{
  
const
 url = 
`
${SUPABASE_URL}
/rest/v1/proposals`
;
  
const
 res = 
await
 fetch(url, {
    
method
: 
'POST'
,
    
headers
: {
      ...DEFAULT_HEADERS,
      
Prefer
: 
'return=representation'

    },
    
body
: 
JSON
.stringify(payload),
  });
  
const
 text = 
await
 res.text();
  
let
 json;
  
try
 { json = text ? 
JSON
.parse(text) : 
null
; } 
catch
 (e) { json = { 
raw
: text }; }
  
return
 { 
status
: res.status, 
body
: json };
}
Deno.serve(
async
 (req: Request) => {
  
try
 {
    
// CORS preflight

    
if
 (req.method === 
'OPTIONS'
) {
      
return
 
new
 Response(
null
, {
        
status
: 
204
,
        
headers
: {
          
'Access-Control-Allow-Origin'
: 
'*'
,
          
'Access-Control-Allow-Methods'
: 
'POST, OPTIONS'
,
          
'Access-Control-Allow-Headers'
: 
'Content-Type, Authorization'
,
        },
      });
    }
    
if
 (req.method !== 
'POST'
) {
      
return
 
new
 Response(
JSON
.stringify({ 
error
: 
'Method not allowed'
 }), { 
status
: 
405
, 
headers
: { 
'Content-Type'
: 
'application/json'
 } });
    }
    
const
 body = 
await
 req.json().catch(
() =>
 
null
);
    
if
 (!body) {
      
return
 
new
 Response(
JSON
.stringify({ 
error
: 
'Invalid JSON body'
 }), { 
status
: 
400
, 
headers
: { 
'Content-Type'
: 
'application/json'
 } });
    }
    
// Basic validation

    
const
 { title, client_name, content, metadata } = body;
    
if
 (!title || !client_name || !content) {
      
return
 
new
 Response(
JSON
.stringify({ 
error
: 
'Missing required fields: title, client_name, content'
 }), { 
status
: 
400
, 
headers
: { 
'Content-Type'
: 
'application/json'
 } });
    }
    
const
 payload = {
      title,
      client_name,
      content,
      
metadata
: metadata ?? {},
    };
    
const
 result = 
await
 insertProposal(payload);
    
// Propagate error from Supabase REST

    
if
 (result.status >= 
400
) {
      
console
.error(
'Supabase insert error'
, result.status, result.body);
      
return
 
new
 Response(
JSON
.stringify({ 
error
: 
'Failed to insert proposal'
, 
details
: result.body }), { 
status
: 
502
, 
headers
: { 
'Content-Type'
: 
'application/json'
, 
'Access-Control-Allow-Origin'
: 
'*'
 } });
    }
    
const
 created = 
Array
.isArray(result.body) ? result.body[
0
] : result.body;
    
return
 
new
 Response(
JSON
.stringify({ 
success
: 
true
, 
proposal
: created }), { 
status
: 
201
, 
headers
: { 
'Content-Type'
: 
'application/json'
, 
'Access-Control-Allow-Origin'
: 
'*'
 } });
  } 
catch
 (err) {
    
console
.error(
'Unhandled error in create-proposal function'
, err);
    
return
 
new
 Response(
JSON
.stringify({ 
error
: 
'Internal server error'
, 
details
: 
String
(err) }), { 
status
: 
500
, 
headers
: { 
'Content-Type'
: 
'application/json'
, 
'Access-Control-Allow-Origin'
: 
'*'
 } });
  }
});"

Validation notes:

This uses the Supabase REST endpoint /rest/v1/proposals. Ensure your table name is correct and you have the insert permission for the service key (service key bypasses RLS).
The function returns descriptive JSON to help debug.
How I can help next (pick one)
I can review the current function code if you paste it here and point out the bug.
I can help you deploy the replacement function (I attempted to use deploy_edge_function but couldn't due to tool access — if you want, paste the function code into the dashboard and I’ll guide you through tests).
I can provide a version that also uploads a generated PDF to Storage and returns a signed URL.
I can give a curl test script and sample request payload to reproduce the error locally.
If you want immediate prioritized help, paste:

Your current create-proposal function source
One example request payload you send from the website
I'll inspect and propose a minimal fix.